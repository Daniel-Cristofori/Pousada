/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Viws;

import Hospedes.Hospede;
import Reservas.Reserva;
import data.HospedeDAO;
import data.HospedeReservaDAO;
import data.ReservaDAO;
import Reservas.HopedeReserva;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**classe que contem tela para selecionar hospede para a reserva
 *
 * @author Daniel
 */
public class TelaReservaHospede extends javax.swing.JFrame {
    
    private final String[] tableColumns = {"CPF", "Nome", "Nascimento","GÃªnero", "RG", "Telefone", "EndereÃ§o", "ObservaÃ§Ãµes"};
 
    DefaultTableModel tableModel = new DefaultTableModel(tableColumns, 0);
    
    private Reserva reserva;
    private List<Hospede> hospedesReserva = new ArrayList<Hospede>();
    
    private ReservaDAO reservaDAO = new ReservaDAO();
    
    private HospedeDAO hospedeDao = new HospedeDAO();
    
    
    /**
     * Creates new form TelaReservaHospede
     */
    public TelaReservaHospede() {
        initComponents();
        setLocationRelativeTo(null);
        
    }

    
    
    /**setter
     * 
     * @param reserva 
     */
    public void setReserva(Reserva reserva) {
        this.reserva = reserva;
    }

    public List<Hospede> getHospedesReserva() {
        return hospedesReserva;
    }
    
    
    

  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblAddHospede = new javax.swing.JLabel();
        lblCpfHospede = new javax.swing.JLabel();
        txtPesquisarCpf = new javax.swing.JTextField();
        txtCadastrarHospede = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospede = new javax.swing.JTable();
        btnFinalizar = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reserva Hospedes");

        jPanel1.setToolTipText("informe o cpf do hospede");

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTitulo.setText("Realizando Reserva");

        lblAddHospede.setText("Adicionar Hospede ( 1 ):");

        lblCpfHospede.setText("Digite o CPF do Hospede:");

        txtPesquisarCpf.setForeground(new java.awt.Color(51, 51, 51));
        txtPesquisarCpf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCadastrarHospede.setBackground(new java.awt.Color(0, 102, 204));
        txtCadastrarHospede.setForeground(new java.awt.Color(0, 102, 204));
        txtCadastrarHospede.setText("Cadastrar Novo Hospede");
        txtCadastrarHospede.setToolTipText("cadastre novo hospede");
        txtCadastrarHospede.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCadastrarHospedeMouseClicked(evt);
            }
        });

        tblHospede.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CPF", "Nome", "Nascimento", "GÃªnero", "RG", "Telefone", "EndereÃ§o", "ObservaÃ§Ãµes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHospede.setToolTipText("hospede encontrado na pesquisa");
        jScrollPane1.setViewportView(tblHospede);

        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("ðŸ”Ž");
        btnPesquisar.setBorder(null);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addGap(216, 216, 216))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnFinalizar)
                        .addGap(134, 134, 134))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdicionar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblAddHospede)
                        .addComponent(txtCadastrarHospede)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCpfHospede)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(txtPesquisarCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblTitulo)
                .addGap(44, 44, 44)
                .addComponent(lblAddHospede)
                .addGap(18, 18, 18)
                .addComponent(lblCpfHospede)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCadastrarHospede)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**abre tela de cadastro de hospeds para a reserva
     * 
     * @param evt 
     */
    private void txtCadastrarHospedeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCadastrarHospedeMouseClicked
       
        
        if (reserva.validaCapacidade(hospedesReserva)) {
        
        
            TelaReservaCadastroH telaReservaCadastroH = new TelaReservaCadastroH();
            telaReservaCadastroH.setReserva(reserva);
            telaReservaCadastroH.setTelaReservaHospede(this);
        
            telaReservaCadastroH.setVisible(true);
        
        } else {
            
            JOptionPane.showMessageDialog(rootPane, "Capacidade maxima de hospedes atingida");
            
        }
         
    }//GEN-LAST:event_txtCadastrarHospedeMouseClicked

    
    /**botÃ£o para finalizar de cadastros
     * 
     * @param evt 
     */
    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
     
        HospedeReservaDAO hospedeReservaDAO = new HospedeReservaDAO();
        
        if (hospedesReserva.size() >= 1) {
           
            reserva.criarOrcamento(hospedesReserva);
            
            reservaDAO.cadastrar(reserva);
            
            for (Hospede h : hospedesReserva) {
                
                Hospede hospede = hospedeDao.hospedePorCpf(h.getCpf());
                
                HopedeReserva hr = new HopedeReserva();
                
                hr.setHospede(hospede);
                hr.setReserva(reserva);
                
                hospedeReservaDAO.cadastrar(hr);
                
            }
        
            TelaReservaDados telaReservaDados = new TelaReservaDados();
        
            telaReservaDados.setReserva(reserva);
            
            telaReservaDados.AtualizaDados();
            telaReservaDados.atualizarTabela();
        
            telaReservaDados.setVisible(true);
        
            this.dispose();
            
        } else {
            
            JOptionPane.showMessageDialog(rootPane, "Adicione pelo menos um Hospede");
            
        }
       
    }//GEN-LAST:event_btnFinalizarActionPerformed

    
    /**botÃ£o para a adiÃ§Ã£o de hospede selecionado
     * 
     * @param evt 
     */
    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        
        Hospede hospede = null;
        
        if (reserva.validaCapacidade(hospedesReserva)) {
            
            try {
        
                hospede = hospedeDao.hospedePorCpf(txtPesquisarCpf.getText());
        
            } catch (IndexOutOfBoundsException e) {
            
                JOptionPane.showMessageDialog(rootPane, "Selecione um Hospede");
            
            }
            
            if (reserva.validaHospedeR(hospedesReserva, hospede)) {
                
                hospedesReserva.add(hospede);
            
                JOptionPane.showMessageDialog(rootPane, "Hospede adicionado");
            
                atualizaQuantidadeH();
                
                txtPesquisarCpf.setText("");
                tblHospede.setModel(new DefaultTableModel(tableColumns, 0));
                
            } else {
                
                JOptionPane.showMessageDialog(rootPane, "Hospede ja cadastrado");
                
            }
        
         } else {
            
            JOptionPane.showMessageDialog(rootPane, "Capacidade maxima de hospedes atingida");
            
        }
        
    }//GEN-LAST:event_btnAdicionarActionPerformed

    
    
    
    /**botÃ£o para a busca de hospede pelo cpf informado
     * 
     * @param evt 
     */
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        
       String cpf = txtPesquisarCpf.getText();
        
        
            
            if (!validaCampo()) {
                
                try {
                    
                     atualizarTabela(hospedeDao.hospedePorCpf(cpf));
                    
                } catch (NullPointerException e) {
                    
                    JOptionPane.showMessageDialog(rootPane, "Hospede nÃ£o encontrado");
                }
            }
 
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaReservaHospede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaReservaHospede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaReservaHospede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaReservaHospede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaReservaHospede().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddHospede;
    private javax.swing.JLabel lblCpfHospede;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblHospede;
    private javax.swing.JLabel txtCadastrarHospede;
    private javax.swing.JTextField txtPesquisarCpf;
    // End of variables declaration//GEN-END:variables


    
    /**atualiza quantos hospedes estÃ£o na reserva
     * 
     */
    public void atualizaQuantidadeH() {
        
        lblAddHospede.setText("Adicionar Hospede ( " + (hospedesReserva.size() + 1 ) + " ):");
        
    }
    
    

/**valida todos os campos
 * 
 * @return 
 */
private boolean validaCampo(){
        
     String cpf = txtPesquisarCpf.getText();
        
        
     boolean valido = true; 

     if(txtPesquisarCpf.getText().trim().isEmpty()){
        
         JOptionPane.showMessageDialog(rootPane, "O campo devem ser preenchido. ");
         
     } else{
         
         boolean strCpf = cpf.matches("[0-9]{3}[.][0-9]{3}[.][0-9]{3}[-][0-9]{2}");
         
    
        if(strCpf  == false){
         
            JOptionPane.showMessageDialog(rootPane, "O campo CPF deve ser no formato 000.000.000-00");
         
        } else{
         
         valido = false;
        }
     }
     
     return valido;
  }




/**atualiza tabela com os dados do hospede encontrado na pesquisa
 * 
 * @param hospede 
 */
private void atualizarTabela(Hospede hospede){
     
     tableModel = new DefaultTableModel(tableColumns, 0);
     
     DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
      
     String rg = String.valueOf( hospede.getRg());
     String telefone = String.valueOf( hospede.getTelefone());
     String data = String.valueOf(formato.format(hospede.getNascimento()));
     
     String[] rowData = {hospede.getCpf(), hospede.getNome(), data, hospede.getGenero(), rg,
         telefone, hospede.getEndereco(), hospede.getObservacoes()};
    
     tableModel.addRow(rowData);
     
     tblHospede.setModel(tableModel);
    
 }    

}
